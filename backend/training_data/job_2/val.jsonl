{"instruction": "I'm writing a Dockerfile which needs to run multiple commands as part of theCMDinstruction and I thought the right way to do this would be to run a shell script with the main daemon executed viaexec. Unfortunately, as part of that process some of my output (stdout? stderr? I don't know, and I don't know how to find out) gets lost.Here's the shell script:#!/bin/sh\n\npython manage.py migrate\nexec python manage.py runserver 0.0.0.0:8000The idea being that themigratecommand is just run once and its output shown, and then therunservercommand should take over and the container runs until that process exits.The actual problem is that the output ofmigrateis displayed correctly, but the immediate output ofrunserveris not shown. Strangely, later request logging ofrunserveris shown just fine.To clarify, here's the output I expected:[...]\nNo migrations to apply.\n[...]\nStarting development server at http://0.0.0.0:8000/\nQuit the server with CONTROL-C.\n[21/Jan/2015 16:27:06] \"GET / HTTP/1.1\" 200 15829Here's what I'm getting withfig up:[...]\nNo migrations to apply.\n[...]\n[21/Jan/2015 16:27:06] \"GET / HTTP/1.1\" 200 15829I'm not even sure who's fault this is. Does therunservercommand change its output depending on how it is run? Is it a problem withexec? Is it docker/fig?As one additional data point, I noticed that I do get all the output when running the container withfig run web, but not when I dofig up, but I don't understand how that's different or relevant.Note: sorry for the tag spam, I'll reduce the tags once I know what actually causes this effect.", "input": "", "output": "I found this old issue today using docker composer. Python logging module checks the output is a terminal so you need to addtty: trueto the service. Example:version: '2'\nservices:\n  django:\n    tty: true\n    command: python -u manage.py runserver 0.0.0.0:8080\n    ports:\n    - \"8080:8080\"", "system": ""}
